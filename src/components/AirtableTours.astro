---
// src/components/AirtableTours.astro
import Airtable from "airtable";

const base = new Airtable({ apiKey: import.meta.env.AIRTABLE_API_KEY }).base(
	import.meta.env.AIRTABLE_BASE_ID
);

async function getTours() {
	try {
		const records = await base("Tours data")
			.select({
				maxRecords: 10,
				view: "Grid view",
			})
			.firstPage();

		return records.map((record) => ({
			id: record.getId(),
			name: record.get("Name"),
			status: record.get("Status"),
			description: record.get("Description"),
			startDate: record.get("Start date"),
			assignee: record.get("Assignee"),
			assets: record.get("Assets"),
		}));
	} catch (error) {
		console.error("Error fetching tours:", error);
		return null;
	}
}

const tours = await getTours();
---

{
	tours === null ? (
		<p>Error al cargar los tours. Por favor, intenta m√°s tarde.</p>
	) : tours.length === 0 ? (
		<p>No hay tours disponibles en este momento.</p>
	) : (
		<div class="tours-container">
			{tours.map((tour) => (
				<div class="tour-card" key={tour.id}>
					<h2>{tour.name}</h2>
					<p>Status: {tour.status}</p>
					<p>Start Date: {tour.startDate}</p>
					<p>Description: {tour.description}</p>
					{tour.assignee && <p>Assignee: {tour.assignee.name}</p>}
					{tour.assets && tour.assets.length > 0 && (
						<img src={tour.assets[0].url} alt={tour.name} width="200" />
					)}
				</div>
			))}
		</div>
	)
}

<style>
	.tours-container {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
		gap: 20px;
	}
	.tour-card {
		border: 1px solid #ddd;
		padding: 15px;
		border-radius: 8px;
	}
</style>
